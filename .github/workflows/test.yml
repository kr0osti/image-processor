name: Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Create uploads directory
        run: |
          mkdir -p public/uploads
          chmod -R 777 public/uploads

      - name: Run tests
        run: pnpm test
        env:
          NEXT_PUBLIC_SITE_NAME: "NextJS Image Processor"
          NEXT_PUBLIC_SITE_DESCRIPTION: "A powerful web application for processing images"
          NEXT_PUBLIC_SITE_URL: "https://example.com"
          CLEANUP_API_KEY: "test-api-key-for-ci"

      - name: Run Playwright tests
        run: pnpm test:e2e
        env:
          NEXT_PUBLIC_SITE_NAME: "NextJS Image Processor"
          NEXT_PUBLIC_SITE_DESCRIPTION: "A powerful web application for processing images"
          NEXT_PUBLIC_SITE_URL: "https://example.com"
          CLEANUP_API_KEY: "test-api-key-for-ci"

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            coverage/
            playwright-report/
          retention-days: 7
