name: Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      # This step is important to ensure pnpm is in the PATH
      - name: Setup pnpm path
        run: echo "$(pnpm -g bin)" >> $GITHUB_PATH

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Verify Jest installation
        run: |
          echo "Checking Jest installation..."
          ls -la node_modules/.bin/
          if [ -f node_modules/.bin/jest ]; then
            echo "Jest binary found at node_modules/.bin/jest"
          else
            echo "Jest binary not found, installing explicitly..."
            pnpm add -D jest @testing-library/jest-dom @testing-library/react jest-environment-jsdom
          fi

      - name: Create uploads directory
        run: |
          mkdir -p public/uploads
          chmod -R 777 public/uploads

      - name: Run linting
        run: pnpm lint || true

      - name: Run unit and API tests
        run: NODE_ENV=test-node pnpm test -- --passWithNoTests --testEnvironment=node --detectOpenHandles --forceExit
        env:
          NEXT_PUBLIC_SITE_NAME: "NextJS Image Processor"
          NEXT_PUBLIC_SITE_DESCRIPTION: "A powerful web application for processing images"
          NEXT_PUBLIC_SITE_URL: "https://example.com"
          CLEANUP_API_KEY: "test-api-key-for-ci"

      - name: Upload test coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/
          retention-days: 7

  e2e-tests:
    runs-on: ubuntu-latest
    needs: unit-tests

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      # This step is important to ensure pnpm is in the PATH
      - name: Setup pnpm path
        run: echo "$(pnpm -g bin)" >> $GITHUB_PATH

      - name: Install dependencies
        run: pnpm install

      - name: Create uploads directory
        run: |
          mkdir -p public/uploads
          chmod -R 777 public/uploads

      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps chromium

      - name: Run Playwright tests
        run: pnpm exec playwright test
        env:
          NEXT_PUBLIC_SITE_NAME: "NextJS Image Processor"
          NEXT_PUBLIC_SITE_DESCRIPTION: "A powerful web application for processing images"
          NEXT_PUBLIC_SITE_URL: "https://example.com"
          CLEANUP_API_KEY: "test-api-key-for-ci"

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7
