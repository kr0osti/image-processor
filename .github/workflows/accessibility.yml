name: Accessibility Testing

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 0 * * 1'  # Run weekly on Monday at midnight

jobs:
  accessibility:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.42.1-jammy
      options: --ipc=host

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      # This step is important to ensure pnpm is in the PATH
      - name: Setup pnpm path
        run: echo "$(pnpm -g bin)" >> $GITHUB_PATH

      - name: Install dependencies
        run: pnpm install

      - name: Build application
        run: pnpm build
        env:
          NEXT_PUBLIC_SITE_NAME: "NextJS Image Processor"
          NEXT_PUBLIC_SITE_DESCRIPTION: "A powerful web application for processing images"
          NEXT_PUBLIC_SITE_URL: "https://example.com"
          CLEANUP_API_KEY: "test-api-key-for-ci"

      - name: Start application
        run: pnpm start &
        env:
          PORT: 3000

      - name: Wait for application to start
        run: |
          echo "Waiting for application to start..."
          timeout 30 bash -c 'until curl -s http://localhost:3000 > /dev/null; do sleep 1; done'
          echo "Application started"

      - name: Install Playwright
        run: npm install -g @playwright/test

      - name: Run accessibility tests with Playwright
        continue-on-error: true  # Don't fail the workflow if accessibility tests fail
        run: |
          # Create a simple Playwright script to test accessibility
          cat > accessibility-test.js << 'EOL'
          const { chromium } = require('@playwright/test');

          async function runAccessibilityTests() {
            const browser = await chromium.launch();
            const context = await browser.newContext();
            const page = await context.newPage();

            const urls = [
              'http://localhost:3000/',
              'http://localhost:3000/?tab=url',
              'http://localhost:3000/?tab=web'
            ];

            for (const url of urls) {
              console.log(`Testing ${url}...`);
              await page.goto(url, { waitUntil: 'networkidle' });

              // Run basic accessibility checks
              const accessibilitySnapshot = await page.accessibility.snapshot();
              console.log(`Page title: ${await page.title()}`);
              console.log(`Found ${accessibilitySnapshot.children.length} elements in accessibility tree`);

              // You can add more sophisticated checks here
            }

            await browser.close();
            console.log('Accessibility tests completed');
          }

          runAccessibilityTests().catch(err => {
            console.error('Error running accessibility tests:', err);
            process.exit(1);
          });
          EOL

          # Run the test
          node accessibility-test.js || {
            echo "::warning::Accessibility tests found issues. See the log for details."
            exit 0  # Don't fail the workflow
          }
