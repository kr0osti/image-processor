name: Docker Build

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Read version
        id: version
        run: echo "VERSION=$(cat version.txt)" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push main application image
      - name: Extract metadata for main app
        id: meta-app
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/nextjs-app
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=${{ steps.version.outputs.VERSION }}
            type=raw,value=latest
            type=sha,format=short

      - name: Build and push main app image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-app.outputs.tags }}
          labels: ${{ steps.meta-app.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Build and push cleanup service image
      - name: Extract metadata for cleanup service
        id: meta-cleanup
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/cleanup-service
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=${{ steps.version.outputs.VERSION }}
            type=raw,value=latest
            type=sha,format=short

      - name: Build and push cleanup service image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.cleanup
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-cleanup.outputs.tags }}
          labels: ${{ steps.meta-cleanup.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
